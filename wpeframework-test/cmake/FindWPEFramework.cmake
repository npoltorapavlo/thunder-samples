find_package(PkgConfig)
pkg_check_modules(PC_WPEFRAMEWORK WPEFrameworkCore)

if(PC_WPEFRAMEWORK_FOUND)
    find_path(
            WPEFRAMEWORK_INCLUDE_DIRS
            NAMES plugins/plugins.h
            HINTS ${PC_WPEFRAMEWORK_INCLUDEDIR} ${PC_WPEFRAMEWORK_INCLUDE_DIRS})
    
    set(WPEFRAMEWORK_LIBS WPEFrameworkPlugins WPEFrameworkCore WPEFrameworkTracing WPEFrameworkProtocols WPEFrameworkSecurityUtil)
    set(WPEFRAMEWORK_LIBRARY )
    foreach(LIB ${WPEFRAMEWORK_LIBS})
        find_library(WPEFRAMEWORK_LIBRARY_${LIB} NAMES ${LIB}
            HINTS ${PC_WPEFRAMEWORK_LIBDIR} ${PC_WPEFRAMEWORK_LIBRARY_DIRS})
        list(APPEND WPEFRAMEWORK_LIBRARY ${WPEFRAMEWORK_LIBRARY_${LIB}})
    endforeach()
endif()

set(WPEFRAMEWORK_DEFINITIONS ${PC_WPEFRAMEWORK_PLUGINS_CFLAGS_OTHER})
set(WPEFRAMEWORK_INCLUDE_DIR ${WPEFRAMEWORK_INCLUDE_DIRS})
set(WPEFRAMEWORK_LIBRARIES ${WPEFRAMEWORK_LIBRARY})
set(WPEFRAMEWORK_LIBRARY_DIRS ${PC_WPEFRAMEWORK_LIBRARY_DIRS})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(WPEFRAMEWORK DEFAULT_MSG
    WPEFRAMEWORK_LIBRARIES
    WPEFRAMEWORK_INCLUDE_DIRS)

if(WPEFRAMEWORK_FOUND)
else()
    message(WARNING "Could not find WPEFramework")
endif()

mark_as_advanced(
        WPEFRAMEWORK_DEFINITIONS
        WPEFRAMEWORK_INCLUDE_DIRS
        WPEFRAMEWORK_LIBRARIES
        WPEFRAMEWORK_LIBRARY_WPEFrameworkPlugins
        WPEFRAMEWORK_LIBRARY_WPEFrameworkCore
        WPEFRAMEWORK_LIBRARY_WPEFrameworkTracing
        WPEFRAMEWORK_LIBRARY_WPEFrameworkProtocols)
